name: Apply SQL to Supabase (API)

on:
  workflow_dispatch: {}
  push:
    paths:
      - "db/migrations/**.sql"
      - "db/apply_all.sql"
      - "db/seed.sql"

jobs:
  apply-sql:
    runs-on: ubuntu-latest
    env:
      PROJECT_REF: umlhceqkwdkpfcdjpueq   # <-- your project id
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Run db/apply_all.sql if present
        if: hashFiles('db/apply_all.sql') != ''
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
        run: |
          SQL_JSON=$(jq -Rs . < db/apply_all.sql)
          curl -sS -X POST "https://api.supabase.com/v1/projects/$PROJECT_REF/sql" \
            -H "Authorization: Bearer $SUPABASE_ACCESS_TOKEN" \
            -H "Content-Type: application/json" \
            -d "{\"query\": $SQL_JSON}"

      - name: Run db/seed.sql if present
        if: hashFiles('db/seed.sql') != ''
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
        run: |
          SQL_JSON=$(jq -Rs . < db/seed.sql)
          curl -sS -X POST "https://api.supabase.com/v1/projects/$PROJECT_REF/sql" \
            -H "Authorization: Bearer $SUPABASE_ACCESS_TOKEN" \
            -H "Content-Type: application/json" \
            -d "{\"query\": $SQL_JSON}"

      - name: Run each migration in order (if any)
        if: hashFiles('db/migrations/**.sql') != ''
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
        run: |
          for f in $(ls -1 db/migrations/*.sql | sort); do
            echo "---- Running $f ----"
            SQL_JSON=$(jq -Rs . < "$f")
            curl -sS -X POST "https://api.supabase.com/v1/projects/$PROJECT_REF/sql" \
              -H "Authorization: Bearer $SUPABASE_ACCESS_TOKEN" \
              -H "Content-Type: application/json" \
              -d "{\"query\": $SQL_JSON}"
          done
