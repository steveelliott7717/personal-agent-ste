name: Supabase Schema Snapshot

on:
  schedule:
    - cron: "0 0 * * *"      # daily at 00:00 UTC
  workflow_dispatch: {}

permissions:
  contents: write            # allow committing to a branch
  pull-requests: write       # allow opening/updating PRs

concurrency:
  group: supabase-schema-snapshot
  cancel-in-progress: false

jobs:
  dump:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo (full history, required for branching)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install psql + jq
        run: |
          sudo apt-get update -y
          sudo apt-get install -y postgresql-client jq

      - name: Dump Supabase schema to /schema
        env:
          DATABASE_URL: ${{ secrets.SUPABASE_DB_POOLER_URL }}  # or DIRECT url if preferred
          SCHEMAS_TO_INCLUDE: public
          OUT_ROOT: schema
          ALLOW_PARTIAL: "1"
          DEBUG: "0"
        run: |
          chmod +x scripts/dump_schema.sh
          ./scripts/dump_schema.sh
          test -d schema && ls -la schema || (echo "schema/ missing" && exit 1)

      # Create/Update a PR with whatever changed under schema/**
      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v6
        with:
          # Only include files under schema/*
          add-paths: |
            schema/**
          commit-message: "chore(schema): daily Supabase schema snapshot"
          title: "chore(schema): daily Supabase schema snapshot"
          body: |
            Automated dump of the Supabase schema.
            - Source: scheduled workflow
            - Includes per-table JSON and index files under `schema/`.
          branch: schema-snapshots    # <-- the side branch this workflow owns/updates
          base: main                  # <-- PR will target main
          labels: |
            automated
            schema
            supabase
          assignees: |
            steveelliott7717
          delete-branch: false        # keep branch so subsequent runs update same PR

      - name: PR URL (or no-op)
        run: |
          if [ "${{ steps.cpr.outputs.pull-request-number }}" != "" ] && [ "${{ steps.cpr.outputs.pull-request-number }}" != "0" ]; then
            echo "PR opened/updated: ${{ steps.cpr.outputs.pull-request-url }}"
          else
            echo "No changes under schema/, no PR created."
          fi
