diff --git a/backend/logging_utils.py b/backend/logging_utils.py
new file mode 100644
--- /dev/null
+++ b/backend/logging_utils.py
@@ -0,0 +1,34 @@
+import logging
+import contextvars
+
+correlation_id_var = contextvars.ContextVar("correlation_id", default=None)
+
+class CorrelationIdFilter(logging.Filter):
+    def filter(self, record: logging.LogRecord) -> bool:
+        record.correlation_id = correlation_id_var.get() or "-"
+        return True
+
+def configure_logging():
+    logging.basicConfig(
+        format='%(asctime)s - %(levelname)s - %(correlation_id)s - %(message)s',
+        level=logging.INFO,
+    )
+    logging.getLogger().addFilter(CorrelationIdFilter())
+
+def log_request_start(method: str, path: str, correlation_id: str):
+    logging.info(f"Request started: method={method}, path={path}, correlation_id={correlation_id}")
+
+def log_request_end(method: str, path: str, status: int, duration: float, correlation_id: str):
+    logging.info(f"Request finished: method={method}, path={path}, status={status}, duration_ms={duration}, correlation_id={correlation_id}")
+
+/* RMS GPT no-op touch: 2023-10-01T00:00:00Z */
+
diff --git a/backend/middleware/request_logging.py b/backend/middleware/request_logging.py
new file mode 100644
--- /dev/null
+++ b/backend/middleware/request_logging.py
@@ -0,0 +1,36 @@
+import time
+import uuid
+from fastapi import Request, Response
+from starlette.middleware.base import BaseHTTPMiddleware
+from backend.logging_utils import log_request_start, log_request_end, configure_logging
+
+class RequestLoggingMiddleware(BaseHTTPMiddleware):
+    async def dispatch(self, request: Request, call_next):
+        correlation_id = str(uuid.uuid4())
+        request.state.correlation_id = correlation_id
+
+        if os.getenv("LOG_REQUESTS", "true").lower() == "true":
+            log_request_start(request.method, request.url.path, correlation_id)
+
+        start_time = time.time()
+        response: Response = await call_next(request)
+        duration = (time.time() - start_time) * 1000  # Convert to milliseconds
+
+        if os.getenv("LOG_REQUESTS", "true").lower() == "true":
+            log_request_end(request.method, request.url.path, response.status_code, duration, correlation_id)
+
+/* RMS GPT no-op touch: 2023-10-01T00:00:00Z */
+
diff --git a/backend/main.py b/backend/main.py
@@ -10,6 +10,7 @@
from fastapi import FastAPI, Request, HTTPException
+from backend.middleware.request_logging import RequestLoggingMiddleware
from fastapi.responses import JSONResponse, RedirectResponse, HTMLResponse, FileResponse
from fastapi.staticfiles import StaticFiles
from pathlib import Path
@@ -225,6 +226,7 @@
app.add_middleware(NaturalLanguageMiddleware)
+app.add_middleware(RequestLoggingMiddleware)

# -------------------- Helpers --------------------
def _extract_query(query: str | None, body: Dict[str, Any] | None) -> Tuple[str | None, Dict[str, Any] | None]:
```