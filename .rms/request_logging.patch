diff --git a/backend/logging_utils.py b/backend/logging_utils.py
new file mode 100644
--- /dev/null
+++ b/backend/logging_utils.py
@@ -0,0 +1,30 @@
+# backend/logging_utils.py
+import logging
+import os
+import uuid
+from contextvars import ContextVar
+
+CORRELATION_ID: ContextVar[str] = ContextVar("correlation_id", default=str(uuid.uuid4()))
+
+class CorrelationIdFilter(logging.Filter):
+    def filter(self, record: logging.LogRecord) -> bool:
+        record.correlation_id = CORRELATION_ID.get()
+        return True
+
+def configure_logging(level=logging.INFO):
+    logging.basicConfig(level=level)
+    logging.getLogger().addFilter(CorrelationIdFilter())
+
+def get_correlation_id() -> str:
+    return CORRELATION_ID.get()
+
+def set_correlation_id(correlation_id: str):
+    CORRELATION_ID.set(correlation_id)
+
+def log_request(method: str, path: str, status: int, duration: float):
+    if os.getenv("LOG_REQUESTS", "true").lower() == "true":
+        logging.info(f"Request: {method} {path} {status} {duration:.2f}ms Correlation ID: {get_correlation_id()}")
+
+def clear_correlation_id():
+    CORRELATION_ID.set(str(uuid.uuid4()))
+
diff --git a/backend/middleware/request_logging.py b/backend/middleware/request_logging.py
new file mode 100644
--- /dev/null
+++ b/backend/middleware/request_logging.py
@@ -0,0 +1,21 @@
+# backend/middleware/request_logging.py
+import time
+import uuid
+from starlette.middleware.base import BaseHTTPMiddleware
+from fastapi import Request
+from backend.logging_utils import set_correlation_id, log_request, clear_correlation_id
+
+class RequestLoggingMiddleware(BaseHTTPMiddleware):
+    async def dispatch(self, request: Request, call_next):
+        correlation_id = str(uuid.uuid4())
+        set_correlation_id(correlation_id)
+        start_time = time.time()
+
+        response = await call_next(request)
+
+        duration = (time.time() - start_time) * 1000  # Convert to milliseconds
+        log_request(request.method, request.url.path, response.status_code, duration)
+
+        clear_correlation_id()
+        return response
+
diff --git a/backend/main.py b/backend/main.py
--- a/backend/main.py
+++ b/backend/main.py
@@ -10,6 +10,7 @@
from fastapi.staticfiles import StaticFiles
+from backend.logging_utils import configure_logging
 from backend.middleware.request_logging import RequestLoggingMiddleware

load_dotenv()
@@ -20,6 +21,7 @@
# backend/main.py
 app = FastAPI(title="Personal Agent API")
 
+configure_logging()  # Configure logging at startup
 app.add_middleware(RequestLoggingMiddleware)  # Add request logging middleware

# -------------------- Health --------------------