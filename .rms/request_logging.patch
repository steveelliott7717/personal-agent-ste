diff --git a/backend/middleware/request_logging.py b/backend/middleware/request_logging.py
new file mode 100644
--- /dev/null
+++ b/backend/middleware/request_logging.py
@@ -0,0 +1,40 @@
+import time
+import uuid
+import os
+import logging
+from fastapi import Request, Response
+from starlette.middleware.base import BaseHTTPMiddleware
+
+logger = logging.getLogger("request_logger")
+
+class RequestLoggingMiddleware(BaseHTTPMiddleware):
+    async def dispatch(self, request: Request, call_next):
+        correlation_id = str(uuid.uuid4())
+        request.state.correlation_id = correlation_id
+
+        start_time = time.time()
+        response: Response = await call_next(request)
+        duration = (time.time() - start_time) * 1000  # Convert to milliseconds
+
+        if os.getenv("LOG_REQUESTS", "true").lower() == "true":
+            logger.info(
+                f"Correlation ID: {correlation_id}, Method: {request.method}, Path: {request.url.path}, "
+                f"Status Code: {response.status_code}, Duration: {duration:.2f} ms"
+            )
+
+        return response
+
+def add_request_logging(app):
+    app.add_middleware(RequestLoggingMiddleware)
+
+# RMS GPT no-op touch: 2023-10-01T00:00:00Z
diff --git a/backend/main.py b/backend/main.py
--- a/backend/main.py
+++ b/backend/main.py
@@ -10,6 +10,7 @@
from fastapi.staticfiles import StaticFiles
+from backend.middleware.request_logging import add_request_logging
from pathlib import Path
from starlette.middleware.base import BaseHTTPMiddleware
+
 # Load .env for SUPABASE etc.
 load_dotenv()
 
@@ -30,6 +31,7 @@
 
 # backend/main.py
 app = FastAPI(title="Personal Agent API")
 
+add_request_logging(app)
 
 @app.get("/app/api/debug/supabase-key")
 async def debug_supabase_key():
```